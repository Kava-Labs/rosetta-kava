ARG build_image=golang:1.17.13-bullseye
FROM $build_image as kava-rosetta-build

RUN apt-get update \
      && apt-get install -y git make gcc \
      && rm -rf /var/lib/apt/lists/*

RUN mkdir /app
WORKDIR /app

ARG cosmovisor_version=v1.1.0
ENV COSMOVISOR_VERSION=$cosmovisor_version

RUN git clone https://github.com/cosmos/cosmos-sdk \
      && cd cosmos-sdk \
      && git checkout cosmovisor/$COSMOVISOR_VERSION \
      && make cosmovisor \
      && mv /app/cosmos-sdk/cosmovisor/cosmovisor /go/bin

ARG kava_genesis_version=v0.17.5
ENV KAVA_GENESIS_VERSION=$kava_genesis_version

RUN git clone https://github.com/kava-labs/kava \
      && cd kava \
      && git checkout $KAVA_GENESIS_VERSION \
      && make install \
      && mkdir -p /app/cosmovisor/genesis/bin \
      && mv /go/bin/kava /app/cosmovisor/genesis/bin

COPY . rosetta-kava

RUN cd rosetta-kava \
  && make install

FROM ubuntu:22.04

RUN apt-get update \
      && apt-get install -y supervisor curl \
      && rm -rf /var/lib/apt/lists/*

RUN mkdir /app \
      && mkdir /app/bin
WORKDIR /app

ENV PATH=$PATH:/app/bin

# copy build binaries from build environment
COPY --from=kava-rosetta-build /app/cosmovisor /app/cosmovisor
COPY --from=kava-rosetta-build /go/bin/cosmovisor /app/bin/cosmovisor
COPY --from=kava-rosetta-build /go/bin/rosetta-kava /app/bin/rosetta-kava

# copy config templates to automate setup
COPY --from=kava-rosetta-build /app/rosetta-kava/examples /app/templates

# copy scripts to run services
COPY --from=kava-rosetta-build /app/rosetta-kava/conf/start-services.sh /app/bin/start-services.sh
COPY --from=kava-rosetta-build /app/rosetta-kava/conf/kill-supervisord.sh /app/bin/kill-supervisord.sh
COPY --from=kava-rosetta-build /app/rosetta-kava/conf/supervisord.conf /etc/supervisor/conf.d/rosetta-kava.conf

ENV KAVA_RPC_URL=http://localhost:26657

CMD ["/app/bin/start-services.sh"]

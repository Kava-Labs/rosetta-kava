# Copyright 2021 Kava Labs, Inc.
# Copyright 2020 Coinbase, Inc.
#
# Derived from github.com/coinbase/rosetta-specifications@c820407
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

openapi: 3.0.2
info:
  version: 0.0.1
  title: Kava Rosetta
  description: |
    Integrate Kava Blockchain using the Rosetta API

    Supports version 1.4.10 of the Rosetta API Specification
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
servers:
  - url: http://localhost:8000
paths:
  /network/list:
    post:
      summary: Get List of Available Networks
      description: |
        This endpoint returns a list of NetworkIdentifiers that the Kava Rosetta
        server supports.
      operationId: networkList
      tags:
        - Network
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetadataRequest'
      responses:
        '200':
          description: A list of supported networks.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkListResponse'
        '500':
          description: An unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /network/options:
    post:
      summary: Get Network Options
      description: |
        This endpoint returns the version information and allowed
        network-specific types for a NetworkIdentifiers returned
        in /netwwork/list.
      operationId: networkOptions
      tags:
        - Network
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkRequest'
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkOptionsResponse'
        '500':
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /network/status:
    post:
      summary: Get Network Status
      description: |
        This endpoint returns the current status of the network requested. Any
        NetworkIdentifier returned by /network/list should be accessible here.
      operationId: networkStatus 
      tags:
        - Network
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkRequest'
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkStatusResponse'
        '500':
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /account/balance:
    post:
      summary: Get an Account's Balance
      description: |
        Get an array of all AccountBalances for an AccountIdentifier and the
        BlockIdentifier at which the balance lookup was performed. The BlockIdentifier
        must always be returned because some consumers of account balance data need
        to know specifically at which block the balance was calculated to
        compare balances they compute from operations with the balance returned
        by the node.

        It is important to note that making a balance request for an account
        without populating the SubAccountIdentifier should not result in the
        balance of all possible SubAccountIdentifiers being returned. Rather,
        it should result in the balance pertaining to no SubAccountIdentifiers
        being returned (sometimes called the liquid balance). To get all
        balances associated with an account, it may be necessary to
        perform multiple balance requests with unique AccountIdentifiers.

        It is also possible to perform a historical balance lookup (if the server
        supports it) by passing in an optional BlockIdentifier.
      operationId: accountBalance
      tags:
        - Account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountBalanceRequest'
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountBalanceResponse'
        '500':
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /block:
    post:
      summary: Get a Block
      description: |
        Get a block by its Block Identifier. If transactions are returned in
        the same call to the node as fetching the block, the response should
        include these transactions in the Block object. If not, an array of
        Transaction Identifiers should be returned so /block/transaction
        fetches can be done to get all transaction information.

        When requesting a block by the hash component of the BlockIdentifier,
        this request MUST be idempotent: repeated invocations for the same
        hash-identified block must return the exact same block contents.

        No such restriction is imposed when requesting a block by height,
        given that a chain reorg event might cause the specific block at
        height `n` to be set to a different one.
      operationId: block
      tags:
        - Block
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlockRequest'
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockResponse'
        '500':
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

/construction/derive:
  post:
    summary: Derive an AccountIdentifier from a PublicKey
    description: |
      Derive returns the AccountIdentifier associated with a public key.
      Blockchains that require an on-chain action to create an
      account should not implement this method.
    operationId: constructionDerive
    tags:
      - Construction
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConstructionDeriveRequest'
    responses:
      '200':
        description: Expected response to a valid request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConstructionDeriveResponse'
      '500':
        description: unexpected error
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
components:
  schemas:
    # Identifiers
    NetworkIdentifier:
      $ref: 'models/NetworkIdentifier.yaml'
    SubNetworkIdentifier:
      $ref: 'models/SubNetworkIdentifier.yaml'
    BlockIdentifier:
      $ref: 'models/BlockIdentifier.yaml'
    PartialBlockIdentifier:
      $ref: 'models/PartialBlockIdentifier.yaml'
    TransactionIdentifier:
      $ref: 'models/TransactionIdentifier.yaml'
    OperationIdentifier:
      $ref: 'models/OperationIdentifier.yaml'
    AccountIdentifier:
      $ref: 'models/AccountIdentifier.yaml'
    SubAccountIdentifier:
      $ref: 'models/SubAccountIdentifier.yaml'

    # Models
    Block:
      $ref: 'models/Block.yaml'
    Transaction:
      $ref: 'models/Transaction.yaml'
    Operation:
      $ref: 'models/Operation.yaml'
    Amount:
      $ref: 'models/Amount.yaml'
    Currency:
      $ref: 'models/Currency.yaml'
    SyncStatus:
      $ref: 'models/SyncStatus.yaml'
    Peer:
      $ref: 'models/Peer.yaml'
    Version:
      $ref: 'models/Version.yaml'
    Allow:
      $ref: 'models/Allow.yaml'
    OperationStatus:
      $ref: 'models/OperationStatus.yaml'
    Timestamp:
      $ref: 'models/Timestamp.yaml'
    PublicKey:
      $ref: 'models/PublicKey.yaml'
    CurveType:
      $ref: 'models/CurveType.yaml'
    SigningPayload:
      $ref: 'models/SigningPayload.yaml'
    Signature:
      $ref: 'models/Signature.yaml'
    SignatureType:
      $ref: 'models/SignatureType.yaml'
    BalanceExemption:
      $ref: 'models/BalanceExemption.yaml'
    ExemptionType:
      $ref: 'models/ExemptionType.yaml'
    Operator:
      $ref: 'models/Operator.yaml'
    BlockTransaction:
      $ref: 'models/BlockTransaction.yaml'
    RelatedTransaction:
      $ref: 'models/RelatedTransaction.yaml'
    Direction:
      $ref: 'models/Direction.yaml'

    # Request/Responses
    AccountBalanceRequest:
      description: |
        An AccountBalanceRequest is utilized to make a balance request
        on the /account/balance endpoint. If the block_identifier is populated,
        a historical balance query should be performed.
      type: object
      required:
        - network_identifier
        - account_identifier
      properties:
        network_identifier:
          $ref: '#/components/schemas/NetworkIdentifier'
        account_identifier:
          $ref: '#/components/schemas/AccountIdentifier'
        block_identifier:
          $ref: '#/components/schemas/PartialBlockIdentifier'
        currencies:
          type: array
          description: |
            In some cases, the caller may not want to retrieve all available
            balances for an AccountIdentifier. If the currencies field
            is populated, only balances for the specified currencies
            will be returned. If not populated, all available balances
            will be returned.
          items:
            $ref: '#/components/schemas/Currency'
    AccountBalanceResponse:
      description: |
        An AccountBalanceResponse is returned on the /account/balance endpoint.
        If an account has a balance for each AccountIdentifier describing it
        (ex: an ukava token balance on staking, vesting, etc), an account
        balance request must be made with each AccountIdentifier.

        The `coins` field was removed and replaced by by `/account/coins` in `v1.4.7`.
      type: object
      required:
        - block_identifier
        - balances
      properties:
        block_identifier:
          $ref: '#/components/schemas/BlockIdentifier'
        balances:
          type: array
          description: |
            A single account may have a balance in multiple currencies.
          items:
            $ref: '#/components/schemas/Amount'
        metadata:
          description: |
            Account-based blockchains that utilize a nonce or sequence number
            should include that number in the metadata. This number could be
            unique to the identifier or global across the account address.
          type: object
          example:
            sequence_number: 23
    ConstructionDeriveRequest:
      description: |
        ConstructionDeriveRequest is passed to the `/construction/derive`
        endpoint. Network is provided in the request because some blockchains
        have different address formats for different networks.
        Metadata is provided in the request because some blockchains
        allow for multiple address types (i.e. different address
        for validators vs normal accounts).
      type: object
      required:
        - network_identifier
        - public_key
      properties:
        network_identifier:
          $ref: '#/components/schemas/NetworkIdentifier'
        public_key:
          $ref: '#/components/schemas/PublicKey'
        metadata:
          type: object
      ConstructionDeriveResponse:
        description: |
          ConstructionDeriveResponse is returned by the `/construction/derive`
          endpoint.
        type: object
        properties:
          account_identifier:
            $ref: '#/components/schemas/AccountIdentifier'
          metadata:
            type: object
    MetadataRequest:
      description: |
        A MetadataRequest is utilized in any request where
        the only argument is optional metadata.
      type: object
      properties:
        metadata:
          type: object
          example: {}
    NetworkRequest:
      description: |
        A NetworkRequest is utilized to retrieve some data specific exclusively
        to a NetworkIdentifier.
      type: object
      required:
        - network_identifier
      properties:
        network_identifier:
          $ref: '#/components/schemas/NetworkIdentifier'
        metadata:
          type: object
    NetworkListResponse:
      description: |
        A NetworkListResponse contains all NetworkIdentifiers
        that the node can serve information for.
      type: object
      required:
        - network_identifiers
      properties:
        network_identifiers:
          type: array
          items:
            $ref: '#/components/schemas/NetworkIdentifier'
    NetworkOptionsResponse:
      description: |
        NetworkOptionsResponse contains information about the versioning of the
        node and the allowed operation statuses, operation types, and errors.
      type: object
      required:
        - version
        - allow
      properties:
        version:
          $ref: '#/components/schemas/Version'
        allow:
          $ref: '#/components/schemas/Allow'
    NetworkStatusResponse:
      description: |
        NetworkStatusResponse contains basic information about the node's
        view of a blockchain network. It is assumed that any BlockIdentifier.Index
        less than or equal to CurrentBlockIdentifier.Index can be queried.

        If a Rosetta implementation prunes historical state, it should
        populate the optional `oldest_block_identifier` field with the
        oldest block available to query. If this is not populated,
        it is assumed that the `genesis_block_identifier` is the oldest
        queryable block.

        If a Rosetta implementation performs some pre-sync before it is
        possible to query blocks, sync_status should be populated so that
        clients can still monitor healthiness. Without this field, it may
        appear that the implementation is stuck syncing and needs to be
        terminated.
      type: object
      required:
        - current_block_identifier
        - current_block_timestamp
        - genesis_block_identifier
        - peers
      properties:
        current_block_identifier:
          $ref: '#/components/schemas/BlockIdentifier'
        current_block_timestamp:
          $ref: '#/components/schemas/Timestamp'
        genesis_block_identifier:
          $ref: '#/components/schemas/BlockIdentifier'
        oldest_block_identifier:
          $ref: '#/components/schemas/BlockIdentifier'
        sync_status:
          $ref: '#/components/schemas/SyncStatus'
        peers:
          type: array
          items:
            $ref: '#/components/schemas/Peer'
    BlockRequest:
      description: |
        A BlockRequest is utilized to make a block request on the
        /block endpoint.
      type: object
      required:
        - network_identifier
        - block_identifier
      properties:
        network_identifier:
          $ref: '#/components/schemas/NetworkIdentifier'
        block_identifier:
          $ref: '#/components/schemas/PartialBlockIdentifier'
    BlockResponse:
      description: |
        A BlockResponse includes a fully-populated block or a partially-populated
        block with a list of other transactions to fetch (other_transactions).

        As a result of the consensus algorithm of some blockchains, blocks
        can be omitted (i.e. certain block indices can be skipped). If a query
        for one of these omitted indices is made, the response should not include
        a `Block` object.

        It is VERY important to note that blocks MUST still form a canonical,
        connected chain of blocks where each block has a unique index. In other words,
        the `PartialBlockIdentifier` of a block after an omitted block should
        reference the last non-omitted block.
      type: object
      properties:
        block:
          $ref: '#/components/schemas/Block'
        other_transactions:
          description: |
            Some blockchains may require additional transactions to be fetched
            that weren't returned in the block response
            (ex: block only returns transaction hashes). For blockchains with a
            lot of transactions in each block, this
            can be very useful as consumers can concurrently fetch all
            transactions returned.
          type: array
          items:
            $ref: '#/components/schemas/TransactionIdentifier'

    # Miscellaneous
    Error:
      $ref: 'models/Error.yaml'
